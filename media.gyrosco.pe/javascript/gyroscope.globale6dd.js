// Generated by CoffeeScript 1.10.0
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.GyroscopeAileron = (function() {
    function GyroscopeAileron() {}

    GyroscopeAileron.prototype.init = function(site) {
      this.site = site;
      this.multiplier = 1;
      this.slow = false;
      this.currentZone = site.zone;
      this.currentSection = '';
      this.currentPage = '';
      this.currentLevel = 0;
      this.intervals = [];
      this.timeouts = [];
      this.cachedPages = {};
      this.logging = false;
      this.options = {
        timeout: 9000,
        triggerClass: 'transitioned',
        pageCache: '#page',
        l1Cache: '#l1-cache',
        l2Cache: '#l2-cache',
        pageContainer: '#page',
        l1Container: '.l1',
        l2Container: '.l2',
        introDuration: 1950,
        subpageIntroDuration: 1200,
        animationsPausedDuration: 400,
        unscrollableDuration: 600,
        subpageUnscrollableDuration: 400,
        mobileWidthThreshold: 750,
        leavingDuration: 380,
        subpageLeavingDuration: 240,
        slowMultiplier: 5,
        replacePage: false
      };
      if ($.pjax.defaults) {
        $.pjax.defaults.scrollTo = false;
      }
      this.bindPjaxEvents();
      this.bindLoadEvents();
      this.bindHistoryEvents();
      return this.bindResizeEvents();
    };

    GyroscopeAileron.prototype.startCascade = function(depth) {
      this.clearTimeouts();
      this.started = true;
      depth = depth || 0;
      if (this.logging) {
        console.log('Start cascade official');
      }
      if (this.logging) {
        console.log(new Date() - this.clickedTime);
      }
      if (this.switchInterval1) {
        clearInterval(this.switchInterval1);
      }
      if (this.switchInterval) {
        clearInterval(this.switchInterval);
      }
      this.readyToSwitch = false;
      this.phase2();
      this.timeouts.push(timeoutSet(this.multiplier * 7, (function(_this) {
        return function() {
          return _this.phase3();
        };
      })(this)));
      this.timeouts.push(timeoutSet(this.multiplier * (depth ? this.options.subpageIntroDuration : this.options.introDuration), (function(_this) {
        return function() {
          return _this.phase4();
        };
      })(this)));
      this.timeouts.push(timeoutSet(this.multiplier * this.options.animationsPausedDuration, (function(_this) {
        return function() {
          return _this.phase5();
        };
      })(this)));
      return this.timeouts.push(timeoutSet(this.multiplier * (depth ? this.options.subpageUnscrollableDuration : this.options.unscrollableDuration), function() {
        return $('body').addClass('scrollable');
      }));
    };

    GyroscopeAileron.prototype.firstLoad = function() {
      this.phase1();
      return timeoutSet(5, (function(_this) {
        return function() {
          return _this.startCascade();
        };
      })(this));
    };

    GyroscopeAileron.prototype.phase1 = function() {
      return this.setUAClasses();
    };

    GyroscopeAileron.prototype.phase2 = function() {
      var el, pageClass, zone;
      el = $('#page .body-class-level-2').first();
      if (el.length !== 1) {
        el = $('#page .body-class-level-1').first();
      }
      if (el.length !== 1) {
        el = $('.body-class').first();
      }
      pageClass = el.val();
      zone = el.attr('data-zone');
      if (zone && zone !== this.currentZone) {
        window.location.reload();
        return;
      }
      this.previousSection = this.currentSection;
      this.previousPage = this.currentPage;
      this.previousLevel = this.currentLevel;
      this.currentSection = el.data('section');
      this.currentPage = el.data('page');
      this.currentLevel = el.data('level');
      $('body').addClass(pageClass + ' level-' + this.currentLevel);
      return $('body').removeClass('no-js leaving');
    };

    GyroscopeAileron.prototype.phase3 = function() {
      var scrollPosition;
      if (!location.hash) {
        scrollPosition = 0;
        if (this.currentSection === 'analytics') {
          if (this.currentPage === 'trends' || this.currentPage === 'insights' || this.currentPage === 'coach') {
            scrollPosition = 240;
          }
        }
        timeoutSet(24, (function(_this) {
          return function() {
            return $('html, body').animate({
              scrollTop: scrollPosition
            }, 240);
          };
        })(this));
      }
      $('body').removeClass('not-loaded switching-page');
      $('body').addClass('intro loaded');
      return this.site.initPage(this.currentZone, this.currentSection, this.currentPage);
    };

    GyroscopeAileron.prototype.phase4 = function() {
      $('body').removeClass('intro going-out going-in same-section');
      return $('html').removeClass('first-intro');
    };

    GyroscopeAileron.prototype.phase5 = function() {
      $('body').addClass('animating');
      this.slow = false;
      this.multiplier = 1;
      return $('body').removeClass('slow');
    };

    GyroscopeAileron.prototype.abortLoad = function() {
      this.clearTimeouts();
      return this.started = false;
    };

    GyroscopeAileron.prototype.clearTimeouts = function() {
      var i, interval, j, len, len1, ref, ref1, timeout;
      ref = this.intervals;
      for (i = 0, len = ref.length; i < len; i++) {
        interval = ref[i];
        clearInterval(interval);
      }
      ref1 = this.timeouts;
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        timeout = ref1[j];
        clearTimeout(timeout);
      }
      this.intervals = [];
      return this.timeouts = [];
    };

    GyroscopeAileron.prototype.bindLoadEvents = function() {
      return $(document).on('ready', (function(_this) {
        return function() {
          return _this.firstLoad();
        };
      })(this));
    };

    GyroscopeAileron.prototype.bindHistoryEvents = function() {
      return $(window).on('pjax:popstate', (function(_this) {
        return function() {
          _this.unsetBodyClasses();
          return timeoutSet(50, function() {
            return _this.goBack();
          });
        };
      })(this));
    };

    GyroscopeAileron.prototype.bindPjaxEvents = function() {
      this.readyToSwitch = false;
      $(document).on('click', 'a.' + this.options.triggerClass, (function(_this) {
        return function(e) {
          var link, linkLevel, secure, to_insecure, url;
          link = $(e.currentTarget);
          _this.clickedTime = new Date();
          _this.started = false;
          url = link.attr('href');
          secure = window.location.protocol === 'https:';
          to_insecure = url.indexOf('http://') === 0;
          if (!url || (to_insecure && secure)) {
            return;
          }
          _this.readyToSwitch = false;
          e.preventDefault();
          if (e.shiftKey) {
            _this.slow = true;
            _this.multiplier = _this.options.slowMultiplier;
          }
          linkLevel = 0;
          if (link.data('level') === 1) {
            linkLevel = 1;
          }
          if (link.data('level') === 2) {
            linkLevel = 2;
          }
          return _this.delayedGoTo(url, link.data('section'), linkLevel);
        };
      })(this));
      return $(document).on('pjax:complete', (function(_this) {
        return function() {
          var extraDelay, timeSinceClicked;
          timeSinceClicked = new Date() - _this.clickedTime;
          if (_this.logging) {
            console.log('pjax complete');
          }
          if (_this.logging) {
            console.log(new Date() - _this.clickedTime);
          }
          if (_this.logging) {
            console.log('page cache', _this.options.pageCache, _this.depth);
          }
          if (_this.options.pageCache === '#page' && !_this.depth) {
            if (_this.logging) {
              console.log('Doing it directly', _this.options.pageCache, _this.depth);
            }
            if (_this.logging) {
              console.log(new Date() - _this.clickedTime);
            }
            if (timeSinceClicked > _this.options.leavingDuration * 0.7) {
              _this.uncache();
              return _this.readyToSwitch = true;
            } else {
              extraDelay = _this.options.leavingDuration - timeSinceClicked;
              if (_this.logging) {
                console.log('loaded the page super fast.', timeSinceClicked, 'wait ', extraDelay);
              }
              return timeoutSet(extraDelay, function() {
                if (_this.logging) {
                  console.log('delay is done');
                }
                _this.uncache();
                return _this.readyToSwitch = true;
              });
            }
          } else {
            if (timeSinceClicked > _this.options.leavingDuration * 0.9) {
              _this.readyToSwitch = true;
              return _this.tryUncache1();
            } else {
              _this.readyToSwitch = true;
              if (_this.switchInterval) {
                return clearInterval(_this.switchInterval);
              }
            }
          }
        };
      })(this));
    };

    GyroscopeAileron.prototype.bindResizeEvents = function() {
      $(window).resize($.debounce(150, true, (function(_this) {
        return function() {
          if (_this.orientationChanged) {
            return;
          }
          $('body').addClass('resizing');
          if (!(_this.getSizeClasses() === _this.currentSizeClasses)) {
            return _this.triggerResizeSwitch();
          }
        };
      })(this)));
      $(window).resize($.debounce(300, false, (function(_this) {
        return function() {
          if (_this.orientationChanged) {
            return;
          }
          $('body').removeClass('resizing');
          if (!(_this.getSizeClasses() === _this.currentSizeClasses)) {
            return _this.triggerResizeSwitch();
          }
        };
      })(this)));
      return $(window).on('orientationchange', (function(_this) {
        return function(e) {
          _this.orientationChanged = true;
          window.scrollTo(0, 0);
          return timeoutSet(200, function() {
            return _this.orientationChanged = false;
          });
        };
      })(this));
    };

    GyroscopeAileron.prototype.triggerResizeSwitch = function() {
      this.resetUAClasses();
      return this.setUAClasses();
    };

    GyroscopeAileron.prototype.unsetBodyClasses = function(extra) {
      if (extra == null) {
        extra = '';
      }
      if (this.logging) {
        console.log('Leaving page, fully unset body');
      }
      if (this.slow) {
        $('body').attr('class', 'slow').prop('offsetHeight');
        $('body').addClass(extra + ' not-loaded leaving');
      } else {
        $('body').attr('class', extra + ' not-loaded leaving');
      }
      return this.site.cleanup();
    };

    GyroscopeAileron.prototype.lightlyUnsetBodyClasses = function(section, depth) {
      var direction;
      if (this.logging) {
        console.log('Do lightly unset body classes so we dont destroy state too much..');
      }
      direction = 'same-level';
      if (this.currentLevel > depth) {
        direction = 'going-out';
      } else if (this.currentLevel < depth) {
        direction = 'going-in';
      }
      $('body').attr('class', section + ' not-loaded switching-page same-section ' + direction);
      if (this.slow) {
        return $('body').addClass('slow');
      }
    };

    GyroscopeAileron.prototype.resetUAClasses = function() {
      return $('html, #device-info').removeClass('touch cursor mobile desktop time-x time-y');
    };

    GyroscopeAileron.prototype.setUAClasses = function(classes) {
      classes = classes || this.getUAClasses();
      return $('html, #device-info').attr('class', classes);
    };

    GyroscopeAileron.prototype.getUAClasses = function() {
      var classes, sizeClasses;
      sizeClasses = this.updateSizeClasses();
      classes = 'detected first-intro ' + $('html').data('ua');
      classes += window.hasOwnProperty('ontouchstart') ? ' touch' : ' cursor';
      return classes += ' ' + sizeClasses;
    };

    GyroscopeAileron.prototype.updateSizeClasses = function() {
      return this.currentSizeClasses = this.getSizeClasses();
    };

    GyroscopeAileron.prototype.getSizeClasses = function() {
      var classes, width;
      width = $(window).width();
      if (width < this.options.mobileWidthThreshold) {
        classes = 'mobile';
        this.isMobile = true;
      } else {
        classes = 'desktop';
        this.isMobile = false;
      }
      return classes;
    };

    GyroscopeAileron.prototype.delayedGoTo = function(url, section, depth, skipCascade, instant) {
      if (skipCascade == null) {
        skipCascade = false;
      }
      if (instant == null) {
        instant = false;
      }
      this.clearTimeouts();
      if (this.logging) {
        console.log('do delayed go to', url, section, depth);
      }
      this.depth = depth || 0;
      if (depth === 1) {
        if (!skipCascade) {
          this.lightlyUnsetBodyClasses(section, depth);
        }
        if (depth === 2) {
          this.depth = 2;
          this.readyToSwitch = false;
          this.delayedLoad = timeoutSet(this.multiplier * this.options.subpageLeavingDuration, (function(_this) {
            return function() {
              return _this.switchInterval = intervalSet(16, function() {
                return _this.tryUncache(2, skipCascade);
              });
            };
          })(this));
          return this.loadFromCacheOrPjax(url, this.options.l2Cache, this.options.l2Container);
        } else if (depth === 1) {
          this.depth = 1;
          this.readyToSwitch = false;
          if (this.logging) {
            console.log('do level 1 switch', url, section, depth);
            console.log(this.depth, 'is depth');
          }
          this.delayedLoad = timeoutSet(this.multiplier * this.options.subpageLeavingDuration, (function(_this) {
            return function() {
              if (_this.switchInterval) {
                clearInterval(_this.switchInterval);
              }
              if (_this.switchInterval1) {
                clearInterval(_this.switchInterval1);
              }
              return _this.switchInterval1 = intervalSet(24, function() {
                if (_this.logging) {
                  console.log(_this.depth, 'is depth c');
                  console.log('Interval loop is going', 1, new Date() - _this.clickedTime);
                }
                return _this.tryUncache1();
              });
            };
          })(this));
          return this.loadFromCacheOrPjax(url, this.options.l1Cache, this.options.l1Container);
        } else {
          this.depth = 0;
          return this.loadTopLevel(url, 0, true);
        }
      } else {
        this.depth = 0;
        return this.loadTopLevel(url);
      }
    };

    GyroscopeAileron.prototype.loadTopLevel = function(url, delay, alreadyUnset) {
      if (alreadyUnset == null) {
        alreadyUnset = false;
      }
      if (!alreadyUnset) {
        this.unsetBodyClasses();
      }
      this.loadFromCacheOrPjax(url, this.options.pageCache);
      return this.delayedLoad = timeoutSet(this.multiplier * this.options.leavingDuration, (function(_this) {
        return function() {
          if (_this.logging) {
            console.log('doing delayed load (in loadTopLevel)');
          }
          return _this.switchInterval = intervalSet(16, function() {
            return _this.tryUncache();
          });
        };
      })(this));
    };

    GyroscopeAileron.prototype.loadFromCacheOrPjax = function(url, container, fragment) {
      var cached, cached_page, destination;
      this.readyToSwitch = false;
      if (this.cachedPages.hasOwnProperty(url)) {
        cached = this.cachedPages[url];
        if (fragment) {
          cached_page = $(cached).find(fragment);
        } else {
          cached_page = cached;
        }
        if (cached_page.length) {
          destination = $(container);
          destination.html(cached_page);
          this.readyToSwitch = true;
          return;
        }
      }
      if (this.logging) {
        console.log('doing pjax request to', url, container, fragment);
      }
      if (this.logging) {
        console.log(new Date() - this.clickedTime);
      }
      if (fragment) {
        return $.pjax({
          url: url,
          container: container,
          fragment: fragment,
          timeout: this.options.timeout,
          replace: this.options.replacePage
        });
      } else {
        return $.pjax({
          url: url,
          container: container,
          timeout: this.options.timeout,
          replace: this.options.replacePage
        });
      }
    };

    GyroscopeAileron.prototype.tryUncache = function(depth, skipCascade) {
      if (depth == null) {
        depth = 0;
      }
      if (skipCascade == null) {
        skipCascade = false;
      }
      if (this.started) {
        return;
      }
      if (this.logging) {
        console.log('Try uncache', this.depth, skipCascade);
      }
      if (this.logging) {
        console.log(new Date() - this.clickedTime);
      }
      if (this.readyToSwitch === true) {
        if (this.switchInterval1) {
          clearInterval(this.switchInterval1);
        }
        if (this.switchInterval) {
          clearInterval(this.switchInterval);
        }
        if (this.depth === 1) {
          return this.uncacheLevel1(depth);
        } else if (this.depth === 2) {
          return this.uncacheLevel2(skipCascade);
        } else if (this.depth === 0) {
          return this.uncache();
        }
      } else {
        if (this.logging) {
          console.log('Not ready to switch, waiting..', $('#page').children().length);
        }
        if (this.logging) {
          return console.log(new Date() - this.clickedTime);
        }
      }
    };

    GyroscopeAileron.prototype.tryUncache1 = function() {
      if (this.logging) {
        console.log('Try uncache 1');
      }
      if (this.logging) {
        console.log(new Date() - this.clickedTime);
      }
      if (this.started) {
        if (this.logging) {
          console.log('Already started so not doing new uncache1');
        }
        return;
      }
      if (this.readyToSwitch === true) {
        this.uncacheLevel1(1);
        if (this.switchInterval1) {
          clearInterval(this.switchInterval1);
        }
        if (this.switchInterval) {
          return clearInterval(this.switchInterval);
        }
      } else {
        if (this.logging) {
          console.log('Not ready to switch, waiting..', $('#page').children().length);
        }
        if (this.logging) {
          return console.log(new Date() - this.clickedTime);
        }
      }
    };

    GyroscopeAileron.prototype.uncache = function() {
      var cache;
      if (this.logging) {
        console.log('Start uncache 1');
      }
      if (this.logging) {
        console.log(new Date() - this.clickedTime);
      }
      clearInterval(this.switchInterval);
      if (this.options.pageCache !== '#page') {
        cache = $(this.options.pageCache).html();
        if (this.logging) {
          console.log('Start uncache 2');
        }
        if (this.logging) {
          console.log(new Date() - this.clickedTime);
        }
        $(this.options.pageContainer).html(cache);
        if (this.logging) {
          console.log('Start uncache 3');
        }
        if (this.logging) {
          console.log(new Date() - this.clickedTime);
        }
      } else {
        if (this.logging) {
          console.log('Skip cache transfer');
        }
        if (this.logging) {
          console.log(new Date() - this.clickedTime);
        }
      }
      $('#page').removeClass('goal-selected').removeClass('goal-preselected').removeClass('content-showing');
      $('body').removeClass('leaving switching-page switching-subpage');
      if (this.logging) {
        console.log('start cascade timeout', new Date() - this.clickedTime);
      }
      return this.startCascade();
    };

    GyroscopeAileron.prototype.uncacheLevel1 = function(depth) {
      var cache;
      cache = $(this.options.l1Cache).html();
      $(this.options.l1Container).empty().html(cache);
      $('body').removeClass('leaving switching-page switching-subpage');
      return timeoutSet(5, (function(_this) {
        return function() {
          return _this.startCascade(depth);
        };
      })(this));
    };

    GyroscopeAileron.prototype.uncacheLevel2 = function(skipCascade) {
      var cache;
      cache = $(this.options.l2Cache).html();
      $(this.options.l2Container).empty().html(cache);
      $('body').removeClass('leaving switching-page switching-subpage');
      return timeoutSet(5, (function(_this) {
        return function() {
          if (!skipCascade) {
            return _this.startCascade(2);
          }
        };
      })(this));
    };

    GyroscopeAileron.prototype.goBack = function() {
      var cachedPage;
      cachedPage = this.cachedPages[window.location.pathname];
      if (cachedPage) {
        $('#page').html(cachedPage);
        $('body').removeClass('leaving level-0 level-1 level-2 switching-page switching-subpage');
        return timeoutSet(5, (function(_this) {
          return function() {
            return _this.startCascade(_this.previousLevel);
          };
        })(this));
      } else {
        return window.location.replace(window.location.toString());
      }
    };

    return GyroscopeAileron;

  })();

  window.GyroscopeBase = (function() {
    function GyroscopeBase() {
      this.connections = new GyroscopeConnections();
      this.extras = new GyroscopeExtras();
      this.extras.event('gyroscope_url', 'load', {
        url: window.location.href
      });
      this.followButton = new GyroscopeFollowButton();
      this.upgrades = new GyroscopeUpgrade();
      this.register = new GyroscopeRegistration();
      this.bindFocus();
      timeoutSet(800, (function(_this) {
        return function() {
          return _this.bindDropdown();
        };
      })(this));
      this.feedback = new GyroscopeFeedback();
      this.bindDeletions();
      this.bindAdminButtons();
    }

    GyroscopeBase.prototype.init = function(zone, section, page) {
      this.closeDropdown();
      this.zone = zone;
      this.aileron = new GyroscopeAileron();
      this.aileron.init(this);
      if (zone === 'public' || zone === 'content') {
        return this["public"] = new GyroscopePublic();
      } else if (zone === 'account') {
        return this.account = new GyroscopeAccount();
      } else if (zone === 'company') {
        return this.company = new GyroscopeCompany();
      } else if (zone === 'webapp') {
        return this.webapp = new GyroscopeWebapp();
      } else if (zone === 'zero') {
        return this.zero = new GyroscopeZero();
      } else if (zone === 'seven') {
        return this.seven = new GyroscopeSeven();
      } else if (zone === 'admin') {
        return this.admin = new GyroscopeAdmin();
      } else if (zone === 'simple') {
        return this.simple = new GyroscopeSimple();
      } else if (zone === 'helix') {
        return this.helix = new GyroscopeHelix();
      } else if (zone === 'apps') {
        return this.apps = new GyroscopeApps();
      } else if (zone === 'mindmap') {
        return this.mindmap = new GyroscopeMindmap();
      } else if (zone === 'reports') {
        return this.reports = new GyroscopeReports();
      } else if (zone === 'insights') {
        return this.insights = new GyroscopeInsights();
      } else if (zone === 'jubilee') {
        return this.jubilee = new GyroscopeJubilee();
      } else if (zone === 'satellite') {
        return this.satellite = new GyroscopeSatellite();
      } else if (zone === 'nightcrawler') {
        return this.nightcrawler = new GyroscopeNightcrawler();
      } else if (zone === 'coaching') {
        return this.coaching = new GyroscopeCoaching();
      }
    };

    GyroscopeBase.prototype.initPage = function(zone, section, page) {
      if (zone === !'nightcrawler' && zone === !'connect') {
        this.extras.event('gyroscope_page', 'view', {
          url: window.location.href,
          zone: zone,
          section: section,
          page: page
        });
      }
      if (zone === 'public' || zone === 'content') {
        this["public"].init(section, page);
        return this.showFooter();
      } else if (zone === 'account') {
        this.account.init(section, page);
        return this.showFooter();
      } else if (zone === 'company') {
        this.company.init(section, page);
        return this.showFooter();
      } else if (zone === 'webapp') {
        return this.webapp.init(section, page);
      } else if (zone === 'zero') {
        return this.zero.init(section, page);
      } else if (zone === 'seven') {
        return this.seven.init(section, page);
      } else if (zone === 'admin') {
        return this.admin.init(section, page);
      } else if (zone === 'simple') {
        this.simple.init(section, page);
        return this.showFooter();
      } else if (zone === 'helix') {
        return this.helix.init(section, page);
      } else if (zone === 'apps') {
        return this.apps.init(section, page);
      } else if (zone === 'mindmap') {
        return this.mindmap.init(section, page);
      } else if (zone === 'reports') {
        this.reports.init(section, page);
        return this.showFooter();
      } else if (zone === 'nightcrawler') {
        return this.nightcrawler.init(section, page);
      } else if (zone === 'jubilee') {
        return this.jubilee.init(section, page);
      } else if (zone === 'insights') {
        return this.insights.init(section, page);
      } else if (zone === 'satellite') {
        return this.satellite.init(section, page);
      } else if (zone === 'coaching') {
        return this.coaching.init(section, page);
      } else if (zone === 'connect') {
        if (page === 'start') {
          return this.connections.initStart();
        } else if (page === 'end') {
          return this.connections.initEnd();
        }
      }
    };

    GyroscopeBase.prototype.cleanup = function() {};

    GyroscopeBase.prototype.bindFocus = function() {
      $(window).on('blur', (function(_this) {
        return function(e) {
          if (_this.removeFocus) {
            clearTimeout(_this.removeFocus);
          }
          return _this.removeFocus = timeoutSet(1000, function() {
            return $('body').addClass('out-of-focus');
          });
        };
      })(this));
      return $(window).on('focus', (function(_this) {
        return function(e) {
          if (_this.removeFocus) {
            clearTimeout(_this.removeFocus);
          }
          return $('body').removeClass('out-of-focus');
        };
      })(this));
    };

    GyroscopeBase.prototype.updateState = function() {
      if (this.zone === 'account') {
        this.account.updateState();
      } else if (this.zone === 'content' || this.zone === 'public') {
        this["public"].updateState();
      }
      if (this.zone === 'company') {
        return this.company.updateState();
      }
    };

    GyroscopeBase.prototype.checkInvited = function() {
      if (this.zone === 'account') {
        return this.account.checkInvited();
      }
    };

    GyroscopeBase.prototype.showFooter = function() {};

    GyroscopeBase.prototype.bindDropdown = function() {
      if ($('html').hasClass('cursor')) {
        $(document).on('mouseenter', '.globals .dropdown', (function(_this) {
          return function(e) {
            if (gyroscope.aileron.isMobile) {
              return;
            }
            $(e.currentTarget).addClass('opened').removeClass('closed');
            return timeoutSet(680, function() {
              return _this.dropdownClosable = true;
            });
          };
        })(this));
        $(document).on('mouseleave', '.globals .dropdown', (function(_this) {
          return function(e) {
            return _this.closeDropdown();
          };
        })(this));
        $(document).on('click', '.globals .dropdown', (function(_this) {
          return function(e) {
            var dropdown, target;
            target = $(e.target);
            dropdown = $(e.currentTarget);
            if (!gyroscope.aileron.isMobile) {
              if ((dropdown.hasClass('opened')) && _this.dropdownClosable) {
                return _this.closeDropdown();
              } else if (!dropdown.hasClass('opened')) {
                return _this.openDropdown();
              }
            }
          };
        })(this));
      } else {
        $(document).on('touchstart', '.globals .dropdown', (function(_this) {
          return function(e) {
            var clicked, dropdown, target;
            target = $(e.target);
            dropdown = $(e.currentTarget);
            clicked = target.parents('.dropdown-menu');
            if (clicked.length) {
              return true;
            }
            if (!gyroscope.aileron.isMobile) {
              if ((dropdown.hasClass('opened')) && _this.dropdownClosable) {
                _this.closeDropdown();
              } else if (!dropdown.hasClass('opened')) {
                _this.openDropdown();
              }
            }
            return true;
          };
        })(this));
      }
      if ($('html').hasClass('cursor')) {
        $(document).on('click', '.globals .dropdown .hamburger', (function(_this) {
          return function(e) {
            return $('body').toggleClass('opened-settings');
          };
        })(this));
        return $(document).on('click', '.globals .dropdown .exit', (function(_this) {
          return function(e) {
            return $('body').removeClass('opened-settings');
          };
        })(this));
      } else {
        $(document).on('touchstart', '.globals .dropdown .hamburger', (function(_this) {
          return function(e) {
            e.preventDefault();
            return $('body').toggleClass('opened-settings');
          };
        })(this));
        return $(document).on('touchstart', '.globals .dropdown .exit', (function(_this) {
          return function(e) {
            e.preventDefault();
            return $('body').removeClass('opened-settings');
          };
        })(this));
      }
    };

    GyroscopeBase.prototype.closeDropdown = function() {
      this.dropdownClosable = false;
      return $('.globals .dropdown').removeClass('opened').addClass('closed');
    };

    GyroscopeBase.prototype.openDropdown = function() {
      this.dropdownClosable = true;
      return $('.globals .dropdown').addClass('opened').removeClass('closed');
    };

    GyroscopeBase.prototype.bindDeletions = function() {
      $(document).on('click', '.delete-photo-item', (function(_this) {
        return function(e) {
          var button, item, url;
          e.preventDefault();
          button = $(e.currentTarget);
          url = button.attr('href');
          if (url) {
            if (_this.deletionRequest) {
              _this.deletionRequest.abort();
            }
            _this.deletionRequest = $.ajax({
              method: 'post',
              dataType: 'text',
              url: url,
              data: {
                'delete': 'true'
              },
              success: function(data) {
                return console.log('deleted', data);
              },
              error: function(data) {
                return console.log('error deleting');
              }
            });
            item = button.parents('.can-delete-item');
            item.addClass('deleted');
            if ($('body').hasClass('jubilee')) {
              return item.remove();
            }
          }
        };
      })(this));
      return $(document).on('click', '.delete-sport-item', (function(_this) {
        return function(e) {
          var button, item, url;
          e.preventDefault();
          button = $(e.currentTarget);
          url = button.attr('href');
          if (url) {
            if (_this.deletionRequest) {
              _this.deletionRequest.abort();
            }
            _this.deletionRequest = $.ajax({
              method: 'post',
              dataType: 'text',
              url: url,
              data: {
                'delete': 'true'
              },
              success: function(data) {
                alert('This workout has been deleted!');
                return console.log('deleted', data);
              },
              error: function(data) {
                return console.log('error deleting');
              }
            });
            item = button.parents('.can-delete-item');
            return item.addClass('deleted');
          }
        };
      })(this));
    };

    GyroscopeBase.prototype.bindAdminButtons = function() {
      return $(document).on('click', '.add-user-to-tag', (function(_this) {
        return function(e) {
          var button, url;
          e.preventDefault();
          button = $(e.currentTarget);
          url = button.attr('data-url');
          if (!url) {
            return;
          }
          if (_this.postTagChange) {
            return;
          }
          return _this.postTagChange = $.ajax({
            method: 'post',
            dataType: 'json',
            url: url,
            success: function(data) {
              button.addClass('added');
              return $('.label', button).text('Added!');
            }
          });
        };
      })(this));
    };

    return GyroscopeBase;

  })();

  window.GyroscopeConnections = (function() {
    function GyroscopeConnections() {
      this.bindRemoteConnections();
    }

    GyroscopeConnections.prototype.bindRemoteConnections = function() {
      $(document).on('click', '.remote-connection', (function(_this) {
        return function(e) {
          var type, url;
          e.preventDefault();
          e.stopPropagation();
          type = $(e.currentTarget).parents('li').attr('class');
          type = $(e.currentTarget).hasClass('facebook-login-button') ? !type ? 'facebook' : void 0 : void 0;
          if ($('#user-status').hasClass('added-' + type)) {
            return false;
          }
          url = $(e.currentTarget).attr('href');
          if (!url) {
            url = $(e.currentTarget).data('href');
          }
          if ($('html').hasClass('os-ios')) {
            return window.location.replace(url);
          } else {
            return _this.popupOpen(url);
          }
        };
      })(this));
      return $(document).on('click', '.close-overlay', (function(_this) {
        return function(e) {
          return $('body').removeClass('remote-connecting');
        };
      })(this));
    };

    GyroscopeConnections.prototype.popupOpen = function(url) {
      if (this.remote_connection) {
        this.remote_connection.close();
      }
      $('body').addClass('remote-connecting');
      return this.remote_connection = window.open(url, "_blank", "height=" + window.screen.height + ",width=980,menubar=no,location=no,scrollbars=no,status=no,titlebar=no,toolbar=no");
    };

    GyroscopeConnections.prototype.initStart = function() {
      var start_url;
      start_url = $('#start_url').attr('data-url');
      if (!start_url) {
        return;
      }
      return window.location.replace(start_url);
    };

    GyroscopeConnections.prototype.initEnd = function() {
      var app, protocol, type;
      type = $('#connection_type').attr('data-type');
      app = $('#for_app').length;
      if (window.opener) {
        window.opener.gyroscope.connections.finishedConnecting(type);
        return window.close();
      } else {
        if (type === 'facebook') {
          if (window.location.pathname === '/setup/') {
            return window.location.reload();
          } else {
            return window.location.replace('/dashboard/');
          }
        } else if (app) {
          protocol = $('#for_app').first().attr('data-protocol');
          if (protocol && protocol === 'quicksilver') {
            return window.location.replace('quicksilver://');
          } else {
            return window.location.replace('gyroscope://complete/' + type + '/');
          }
        } else {
          return window.location.replace('/settings/#' + type);
        }
      }
    };

    GyroscopeConnections.prototype.finishedConnecting = function(type) {
      if ($('body').hasClass('logged-out')) {
        this.doFacebookLogin();
      } else {
        this.startImport(type);
        $('body').removeClass('remote-connecting');
      }
      return $('input[name="csrfmiddlewaretoken"]').val(getCookie('csrftoken'));
    };

    GyroscopeConnections.prototype.doFacebookLogin = function() {
      if ($('#page .locked-page').length || $('#page .locked-group-info').length) {
        window.location.reload();
        return;
      }
      if ($('body').hasClass('store')) {
        window.location.reload();
        return;
      }
      return window.location.href = '/dashboard/';
    };

    GyroscopeConnections.prototype.startImport = function(type) {
      return gyroscope.updateState();
    };

    return GyroscopeConnections;

  })();

  window.GyroscopeExtras = (function() {
    function GyroscopeExtras() {
      this.coverPhotoLoaded = false;
      this.bindLinkTouchEffects();
      this.bindVideos();
    }

    GyroscopeExtras.prototype.bindVideos = function() {
      return $(document).on('click', '.start-playing-video', (function(_this) {
        return function(e) {
          var button, player, video;
          button = $(e.currentTarget);
          player = button.parents('.video-player');
          video = $('video', player)[0];
          return _this.playVideo(video);
        };
      })(this));
    };

    GyroscopeExtras.prototype.autoStartVideo = function() {
      var player, video;
      player = $('#page .video-player').first();
      if (player.length) {
        $('body').addClass('playing');
        video = $('video', player)[0];
        return this.playVideo(video);
      }
    };

    GyroscopeExtras.prototype.playVideo = function(video) {
      $('body').addClass('playing');
      console.log(video);
      video.play();
      return video.controls = true;
    };

    GyroscopeExtras.prototype.bindLinkTouchEffects = function() {
      $(document).on('touchstart', 'a', (function(_this) {
        return function(e) {
          var link;
          link = $(e.currentTarget);
          return link.addClass('touching');
        };
      })(this));
      return $(document).on('touchend', 'a', (function(_this) {
        return function(e) {
          var link;
          link = $(e.currentTarget);
          return link.removeClass('touching');
        };
      })(this));
    };

    GyroscopeExtras.prototype.startIncrementingAge = function(shell) {
      var ageDecimals, decimalsPerSecond;
      if (!shell) {
        shell = $('#page');
      }
      ageDecimals = $('.age-decimal-increment', shell).first();
      ageDecimals.css('width', ageDecimals.width());
      decimalsPerSecond = Math.pow(10, 9) / (365 * 24 * 60 * 60);
      if (!$('html').hasClass('mobile')) {
        return gyroscope.aileron.intervals.push(intervalSet(70, (function(_this) {
          return function() {
            return _this.updateAgeDecimals($('.age-decimal-increment', shell), decimalsPerSecond);
          };
        })(this)));
      }
    };

    GyroscopeExtras.prototype.updateAgeDecimals = function(element, decimalsPerSecond) {
      var current, remainder, remainder_string;
      current = parseFloat(element.first().text());
      remainder = parseInt(current + decimalsPerSecond * 0.07);
      if (remainder > Math.pow(10, 9)) {
        this.incrementBaseAge();
      }
      remainder_string = remainder + '';
      return element.html((' 00000000' + remainder_string).slice(-9));
    };

    GyroscopeExtras.prototype.incrementBaseAge = function() {
      var current, element;
      element = $('.incrementable.age-number');
      current = parseInt(element.html());
      return element.text(current + 1);
    };

    GyroscopeExtras.prototype.loadCoverPhoto = function() {
      var background, image_element, img, url;
      this.coverPhotoLoaded = false;
      background = $('.globals #background-photo').first();
      image_element = $('.image', background).first();
      if (!url) {
        url = $('#page .background_url').first().attr('data-url');
      }
      if (!url) {
        url = $('.background_url').first().attr('data-url');
      }
      if (url && (background.hasClass('unset' || image_element.attr('style') !== 'background-image: url(' + url + ')'))) {
        img = $(new Image());
        img.imagesLoaded((function(_this) {
          return function() {
            $('.image', background).attr('style', 'background-image: url(' + url + ')');
            background.removeClass('unset');
            _this.coverPhotoLoaded = true;
            gyroscope.aileron.startCascade();
            if (_this.loadTimeout) {
              return clearTimeout(_this.loadTimeout);
            }
          };
        })(this));
        img.src = url;
        return this.loadTimeout = timeoutSet(5000, (function(_this) {
          return function() {
            return gyroscope.aileron.startCascade();
          };
        })(this));
      } else {
        if (!url) {
          background.addClass('no-image');
          background.find('shadowing').remove();
        }
        this.coverPhotoLoaded = true;
        return gyroscope.aileron.startCascade();
      }
    };

    GyroscopeExtras.prototype.gridSetup = function() {
      var classes, columns, delay, dots, grid, i, initialDelay, j, ref, ref1, rows, x, xPos, xSpeed, y, yPos, ySpeed;
      grid = $('.grid .dots');
      columns = 24;
      rows = 16;
      dots = '';
      xSpeed = 40;
      ySpeed = 60;
      xSpeed = 24;
      ySpeed = 24;
      xSpeed = 19;
      ySpeed = 28;
      initialDelay = 10;
      initialDelay = 100;
      for (x = i = 0, ref = columns; i <= ref; x = i += 1) {
        for (y = j = 0, ref1 = rows; j <= ref1; y = j += 1) {
          xPos = x * (100 / columns);
          yPos = y * (100 / rows);
          delay = initialDelay + ((xSpeed * columns) - xSpeed * Math.abs(x - columns / 2)) + ((ySpeed * rows) - ySpeed * Math.abs(y - rows / 2));
          delay = initialDelay + (xSpeed * Math.abs(x - columns / 2)) + (ySpeed * Math.abs(y - rows / 2));
          classes = '';
          if (y > 14) {
            classes += 'below';
          }
          dots += '<span class="dot ' + classes + '" style="top:' + yPos + '%; left:' + xPos + '%; transition-delay:' + delay + 'ms" />';
        }
      }
      grid.append($(dots));
      return grid.addClass('initialized');
    };

    GyroscopeExtras.prototype.mouseWatch = function() {
      var throttleAmount;
      this.body = $('body');
      this.pageWidth = $(window).width();
      this.pageHeight = $(window).height();
      throttleAmount = 133;
      throttleAmount = 16;
      return $(window).mousemove($.throttle(throttleAmount, (function(_this) {
        return function(e) {
          return _this.analyzeMouseMovement(e);
        };
      })(this)));
    };

    GyroscopeExtras.prototype.analyzeMouseMovement = function(e) {
      var mouseX, mouseY;
      mouseX = 100 - (100 * e.pageX / this.pageWidth);
      mouseY = 100 * e.pageY / this.pageHeight;
      return this.setOrigin(mouseX, mouseY);
    };

    GyroscopeExtras.prototype.setOrigin = function(x, y) {
      return this.body.css({
        '-webkit-perspective-origin': x + '% ' + y + '%'
      });
    };

    GyroscopeExtras.prototype.event = function(obj, action, params) {};

    return GyroscopeExtras;

  })();

  window.GyroscopeFeedback = (function() {
    function GyroscopeFeedback() {
      this.bindEvents();
    }

    GyroscopeFeedback.prototype.openFeedbackModal = function() {
      var feedback, form;
      if ($('body').hasClass('account feedback')) {
        return;
      }
      feedback = $('.globals .feedback-modal');
      form = $('.feedback-form-container', feedback);
      form.removeClass('sent');
      feedback.removeClass('collapsed');
      $('.feedback-textarea').focus();
      this.modalOpen = true;
      return $('body').addClass('modal-open');
    };

    GyroscopeFeedback.prototype.handleFormSubmit = function(form) {
      var data, message, page, url;
      if (this.submitting) {
        alert('Please wait, submitting...');
        return;
      }
      message = $('.feedback-textarea', form);
      if (!message.val()) {
        alert('Please complete the form before submitting');
        return;
      }
      page = $('.body-class').last();
      url = form.attr('action');
      data = form.serialize();
      if (page.length) {
        data += '&source=' + page.attr('data-zone') + ' ' + page.attr('data-section') + ' ' + page.attr('data-page');
      }
      this.submitting = true;
      $('body').addClass('submitting');
      if (this.feedbackFormSubmit) {
        this.feedbackFormSubmit.abort();
      }
      return this.feedbackFormSubmit = $.ajax({
        method: 'post',
        dataType: 'json',
        data: data,
        url: url
      }).done((function(_this) {
        return function(data) {
          var container;
          if (data.error) {
            return alert(data.error);
            _this.submitting = false;
            $('body').removeClass('submitting');
          }
          $('.feedback-textarea').val('');
          container = form.parents('.feedback-form-container');
          container.addClass('sent');
          _this.submitting = false;
          return $('body').removeClass('submitting');
        };
      })(this));
    };

    GyroscopeFeedback.prototype.closeModal = function() {
      var feedback;
      feedback = $('.globals .feedback-modal');
      feedback.addClass('collapsed');
      this.modalOpen = false;
      return $('body').removeClass('modal-open');
    };

    GyroscopeFeedback.prototype.bindEvents = function() {
      this.modalOpen = false;
      this.bindFeedbackModalClick();
      this.bindFeedbackFormSubmit();
      this.bindFeedbackClose();
      this.bindFeedbackEscape();
      this.bindFeedbackModalOverlay();
      return this.bindGiftCard();
    };

    GyroscopeFeedback.prototype.bindFeedbackModalClick = function() {
      return $(document).on('click', '.open-feedback-modal', (function(_this) {
        return function(e) {
          e.preventDefault();
          return _this.openFeedbackModal();
        };
      })(this));
    };

    GyroscopeFeedback.prototype.bindFeedbackFormSubmit = function() {
      return $(document).on('submit', '.feedback-form', (function(_this) {
        return function(e) {
          var form;
          e.preventDefault();
          form = $(e.currentTarget);
          return _this.handleFormSubmit(form);
        };
      })(this));
    };

    GyroscopeFeedback.prototype.bindFeedbackClose = function() {
      return $(document).on('click', '.close-modal', (function(_this) {
        return function(e) {
          e.preventDefault();
          return _this.closeModal();
        };
      })(this));
    };

    GyroscopeFeedback.prototype.bindFeedbackEscape = function() {
      return $(window).on('keydown', (function(_this) {
        return function(e) {
          if (e.which === 27) {
            if (_this.modalOpen) {
              if (!$('.feedback-textarea').val()) {
                return _this.closeModal();
              }
            }
          }
        };
      })(this));
    };

    GyroscopeFeedback.prototype.bindFeedbackModalOverlay = function() {
      return $(document).on('click', '.feedback-modal .modal-background', (function(_this) {
        return function(e) {
          if (_this.modalOpen) {
            if (!$('.feedback-textarea').val()) {
              return _this.closeModal();
            }
          }
        };
      })(this));
    };

    GyroscopeFeedback.prototype.bindGiftCard = function() {
      return $(document).on('click', '.prefill-feedback-giftcard', (function(_this) {
        return function(e) {
          var messageString;
          $('.feedback-form-container').addClass('expanded');
          messageString = 'I would like to order a custom gift card!\n\n';
          messageString += '1x Score Year ($120 each)\n';
          messageString += '0x OS month ($5 each)\n\n';
          messageString += '(We will send payment details to your email)';
          $('#feedback-textarea').val(messageString);
          $('.submit-feedback.button').val('Send Order');
          return timeoutSet(800, function() {
            return $('#feedback-textarea').focus();
          });
        };
      })(this));
    };

    return GyroscopeFeedback;

  })();

  window.GyroscopeFollowButton = (function() {
    function GyroscopeFollowButton() {
      this.nextAction = bind(this.nextAction, this);
      this.updateButtonFromClick = bind(this.updateButtonFromClick, this);
      this.handleButtonClick = bind(this.handleButtonClick, this);
      this.handleFormSubmit = bind(this.handleFormSubmit, this);
      $(document).on('submit', '.follow-button-form', this.handleFormSubmit);
      $(document).on('click', '.follow-button-display .button', this.handleButtonClick);
    }

    GyroscopeFollowButton.prototype.handleFormSubmit = function(e) {
      var currentFollowAction, form;
      form = $(e.currentTarget);
      currentFollowAction = $('input[name="action"]', form).val();
      if (this.submitForm) {
        this.submitForm.abort();
      }
      this.submitForm = $.ajax({
        method: 'POST',
        dataType: 'html',
        url: form.attr('action'),
        data: form.serialize()
      });
      this.updateButtonFromClick(currentFollowAction, form);
      return false;
    };

    GyroscopeFollowButton.prototype.handleButtonClick = function(e) {
      var button, form;
      button = $(e.currentTarget);
      form = button.parents('.follow-button-display').find('form');
      form.submit();
      return false;
    };

    GyroscopeFollowButton.prototype.updateButtonFromClick = function(currentAction, form) {
      var next, wrapper;
      next = this.nextAction(currentAction);
      wrapper = form.parents('.follow-button-display');
      wrapper.removeClass(currentAction).addClass(next);
      return $('input[name="action"]', form).val(next);
    };

    GyroscopeFollowButton.prototype.nextAction = function(currentAction) {
      switch (currentAction) {
        case 'unfriend':
          return 'request';
        case 'revoke':
          return 'request';
        case 'request':
          return 'revoke';
        case 'unfollow':
          return 'follow';
        case 'follow':
          return 'unfollow';
      }
      return 'friend';
    };

    return GyroscopeFollowButton;

  })();

  window.timeoutSet = function(time, fn) {
    return setTimeout(fn, time);
  };

  window.intervalSet = function(time, fn) {
    return setInterval(fn, time);
  };

  window.numberWithCommas = function(num) {
    return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
  };

  window.padWithZeros = function(n, digits) {
    n = n + '';
    if (n.length >= digits) {
      return n;
    } else {
      return new Array(digits - n.length + 1).join('0') + n;
    }
  };

  String.prototype.toProperCase = function() {
    return this.replace(/\w\S*/g, function(txt) {
      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
    });
  };

  window.GyroscopeRegistration = (function() {
    function GyroscopeRegistration() {
      this.bindings();
      this.bindEmailCheck();
    }

    GyroscopeRegistration.prototype.bindings = function() {
      $(document).on('click', '.registration-start', (function(_this) {
        return function(e) {
          e.preventDefault();
          return _this.openModal();
        };
      })(this));
      $(document).on('click', '.close-signup-modal', (function(_this) {
        return function(e) {
          e.preventDefault();
          _this.closeModal();
          return _this.modalOpen = false;
        };
      })(this));
      $(document).on('click', '.signup-modal .to-slide-2', (function(_this) {
        return function(e) {
          var button, form;
          $('body').removeClass('slide-1 slide-3').addClass('slide-2');
          button = $(e.currentTarget);
          form = button.parents('.register-form');
          $('.name.input', form).focus();
          return _this.registerEmail(form);
        };
      })(this));
      $(document).on('click', '.signup-modal .to-slide-3', (function(_this) {
        return function(e) {
          $('body').removeClass('slide-2 slide-1').addClass('slide-3');
          return $('.signup-modal .password.input').focus();
        };
      })(this));
      $(document).on('click', '.signup-modal .button.submit', (function(_this) {
        return function(e) {
          var button, form;
          button = $(e.currentTarget);
          form = button.parents('.register-form');
          if (form.hasClass('unavailable')) {
            _this.submitLoginForm(form);
          } else {
            return _this.submitSignupForm(form);
          }
        };
      })(this));
      $(document).on('click', '.signup-modal .submit-password', (function(_this) {
        return function(e) {
          var button, form;
          button = $(e.currentTarget);
          form = button.parents('.register-form');
          console.log('do send fom');
          return _this.submitLoginForm(form);
        };
      })(this));
      $(document).on('submit', '.register-form.for-homepage', (function(_this) {
        return function(e) {
          var form;
          e.preventDefault();
          form = $(e.currentTarget);
          if (form.hasClass('unavailable')) {

          } else if (form.hasClass('available')) {
            return _this.registerEmail(form);
          }
        };
      })(this));
      $(document).on('click', '.register-form .submit-roadmap-email', (function(_this) {
        return function(e) {
          var form;
          e.preventDefault();
          form = $(e.currentTarget).parents('form');
          if (form.hasClass('unavailable')) {

          } else if (form.hasClass('available')) {
            return _this.registerEmail(form);
          }
        };
      })(this));
      $(document).on('submit', '.signup-modal .register-form', (function(_this) {
        return function(e) {
          var form;
          e.preventDefault();
          form = $(e.currentTarget);
          if (form.hasClass('unavailable')) {
            console.log('Do Login...');
            _this.submitLoginForm(form);
            return;
          }
          if ($('body').hasClass('slide-1')) {
            if (!form.hasClass('available')) {
              return;
            }
            _this.registerEmail(form);
            $('body').removeClass('slide-1 slide-3').addClass('slide-2');
            $('.name', form).focus();
          } else if ($('body').hasClass('slide-2')) {
            $('body').removeClass('slide-2 slide-1').addClass('slide-3');
            $('.password', form).focus();
          } else if ($('body').hasClass('slide-3')) {
            _this.submitSignupForm(form);
          } else if (form.hasClass('submittable')) {
            return _this.submitSignupForm(form);
          }
        };
      })(this));
      $(document).on('click', '.signup-modal .forgot-password', (function(_this) {
        return function(e) {
          var email, form;
          e.preventDefault();
          console.log('click click');
          email = $('.signup-modal .email-field');
          form = $('.signup-modal .register-form');
          return $.ajax({
            dataType: 'html',
            method: 'post',
            url: '/forgot/',
            data: form.serialize()
          }).done(function(data) {
            console.log('data', data);
            return _this.forgotSubmitted();
          });
        };
      })(this));
      $(document).on('click', '.signup-modal .set-male', (function(_this) {
        return function(e) {
          return _this.setGender('male');
        };
      })(this));
      $(document).on('click', '.signup-modal .set-female', (function(_this) {
        return function(e) {
          return _this.setGender('female');
        };
      })(this));
      return $(document).on('click', '.signup-modal .to-submit', (function(_this) {
        return function(e) {
          var button, form;
          button = $(e.currentTarget);
          form = button.parents('.register-form');
          return _this.submitSignupForm(form);
        };
      })(this));
    };

    GyroscopeRegistration.prototype.openModal = function(intent) {
      var body, modal;
      modal = $('.globals .signup-modal');
      this.modalOpen = true;
      body = $('body').addClass('modal-open slide-1').removeClass('slide-2 slide-3');
      modal.removeClass('collapsed');
      this.setGender('male');
      return timeoutSet(24, (function(_this) {
        return function() {
          return $('input.email', modal).focus();
        };
      })(this));
    };

    GyroscopeRegistration.prototype.closeModal = function() {
      var modal;
      modal = $('.globals .signup-modal');
      modal.addClass('collapsed');
      this.modalOpen = false;
      return $('body').removeClass('modal-open');
    };

    GyroscopeRegistration.prototype.registerEmail = function(form) {
      var email;
      email = $('.email-field', form).val();
      if (email) {
        if (!form.hasClass('available')) {
          alert('Please enter a valid email');
          return;
        }
        if (form.hasClass('submitted')) {
          return;
        }
        $('.email-field', form).attr('readonly', 'true');
        return $.ajax({
          dataType: 'json',
          method: 'post',
          url: '/join-newsletter/',
          data: {
            email: email,
            platform: 'web'
          }
        }).done((function(_this) {
          return function(data) {
            console.log('received email entry', data);
            return form.addClass('submitted');
          };
        })(this));
      } else {
        return alert('Please enter your email address to start!');
      }
    };

    GyroscopeRegistration.prototype.bindEmailCheck = function() {
      $(document).on('keypress', '.register-form .email-field', (function(_this) {
        return function(e) {
          var input;
          input = $(e.currentTarget);
          return timeoutSet(10, function() {
            return _this.updateEmailInput(input);
          });
        };
      })(this));
      $(document).on('keydown', '.register-form .email-field', (function(_this) {
        return function(e) {
          var input;
          input = $(e.currentTarget);
          return timeoutSet(15, function() {
            return _this.updateEmailInput(input);
          });
        };
      })(this));
      return $(document).on('change', '.register-form .password', (function(_this) {
        return function(e) {
          var input;
          input = $(e.currentTarget);
          console.log('entered pw text');
          return $('.register-form').toggleClass('password-entered', input.val().length > 2);
        };
      })(this));
    };

    GyroscopeRegistration.prototype.updateEmailInputDisplay = function(input, username, classes) {
      return $('.register-form').removeClass('empty short same invalid available unavailable').addClass(classes);
    };

    GyroscopeRegistration.prototype.updateEmailInput = function(input) {
      var form, new_email;
      if (this.last_email === input.val()) {
        return;
      }
      new_email = input.val();
      this.last_email = new_email;
      form = input.parents('.register-form');
      input.val(new_email);
      if (new_email === '') {
        this.validEmail = false;
        return this.updateEmailInputDisplay(input, new_email, 'empty');
      } else if (!this.emailAddressIsComplete(new_email)) {
        this.validEmail = false;
        return this.updateEmailInputDisplay(input, new_email, 'short');
      } else if (new_email.substring(new_email.length - 4) === '.con') {
        alert('The email you typed says .con not .com!');
        this.validEmail = false;
        return this.updateEmailInputDisplay(input, new_email, 'invalid');
      }
      if (this.emailCheck) {
        this.emailCheck.abort();
      }
      return this.emailCheck = $.ajax({
        method: 'get',
        dataType: 'json',
        url: '/api/account/username/check/?email=' + encodeURIComponent(new_email)
      }).done((function(_this) {
        return function(data) {
          if (data.taken) {
            _this.updateEmailInputDisplay(input, new_email, 'unavailable');
            if (form.hasClass('redirect-if-found')) {
              $('.signup-modal-container input.email').val(new_email);
              alert('You have an account already!\n\nJust log back in to continue where you left off, and you will be able to see the setup guide and free roadmap.');
              _this.openModal();
              timeoutSet(88, function() {
                return $('.signup-modal-container input.password').focus();
              });
            } else {
              _this.validEmail = false;
              $('.inner-email-text', form).text(new_email);
              return $('.password', form).focus();
            }
          } else {
            _this.updateEmailInputDisplay(input, new_email, 'available');
            _this.validEmail = true;
            return $('.inner-email-text').text(new_email);
          }
        };
      })(this));
    };

    GyroscopeRegistration.prototype.submitLoginForm = function(form) {
      var pw;
      pw = $('.password', form).first().val();
      if (!pw.length) {
        alert('Password is empty! Make sure you enter your password before logging in. If you forgot it, you can request a reset instead');
        return;
      }
      return $.ajax({
        dataType: 'json',
        method: 'post',
        url: '/login/email/',
        data: form.serialize()
      }).done((function(_this) {
        return function(data) {
          console.log('received login data', data);
          if (data && data.status === 'ok') {
            return _this.loginSubmitted(false);
          } else {
            return alert('Incorrect login information', data.error);
          }
        };
      })(this));
    };

    GyroscopeRegistration.prototype.loginSubmitted = function(new_signup) {
      var path, redir;
      path = window.location.pathname;
      redir = $('#next-redirect').val();
      if (path === '/ai-score/') {
        timeoutSet(24, function() {
          window.location = '/ai-score/#checkout';
          return location.reload();
        });
      } else if (path === '/x-coach/') {
        timeoutSet(24, function() {
          window.location = '/x-coach/#checkout';
          return location.reload();
        });
      } else if (path === '/food-xray/') {
        timeoutSet(24, function() {
          window.location = '/food-xray/#checkout';
          return location.reload();
        });
      } else if (redir && redir.length) {
        return window.location.replace(redir);
      } else if (path.length > 10) {
        return window.location.reload();
      } else {
        if (new_signup) {
          timeoutSet(24, function() {
            return window.location = '/';
          });
        } else {
          timeoutSet(24, function() {
            return window.location = '/start/';
          });
        }
      }
    };

    GyroscopeRegistration.prototype.submitSignupForm = function(form) {
      if (!$('.register-form .password.input').val()) {
        alert('Make sure a password is typed in, as you will need it to log back in');
        return;
      }
      if (this.signingUp) {
        alert('Please wait!');
        return;
      }
      this.signingUp = true;
      return $.ajax({
        method: 'post',
        dataType: 'json',
        data: form.serialize(),
        url: '/quick-signup/'
      }).done((function(_this) {
        return function(data) {
          console.log('Done with signup', data);
          alert('Welcome to Gyroscope, your free account has been set up!');
          return _this.loginSubmitted(true);
        };
      })(this)).error((function(_this) {
        return function(data) {
          _this.signingUp = false;
          console.log('Error signing up');
          return alert('Error with signup data', 'Please make sure all the fields are filled out correctly or try again at gyrosco.pe/signup');
        };
      })(this));
    };

    GyroscopeRegistration.prototype.forgotSubmitted = function() {
      return $('body').removeClass('slide-1 slide-2 slide-3').addClass('forgot-sent');
    };

    GyroscopeRegistration.prototype.setGender = function(gender) {
      var body;
      body = $('body');
      if (gender === 'male') {
        body.removeClass('female').addClass('male');
        return $('.register-form .gender').val('male');
      } else {
        body.addClass('female').removeClass('male');
        return $('.register-form .gender').val('female');
      }
    };

    GyroscopeRegistration.prototype.emailAddressIsComplete = function(new_email) {
      if (new_email.length < 5) {
        return false;
      }
      if (new_email.indexOf('@') === -1) {
        return false;
      }
      if (new_email.split('@').length > 2) {
        return false;
      }
      if (new_email.indexOf('.') === -1) {
        return false;
      }
      if (new_email.substring(new_email.length - 1) === '.') {
        return false;
      }
      if (new_email.substring(new_email.length - 2, new_email.length - 1) === '.') {
        return false;
      }
      return true;
    };

    return GyroscopeRegistration;

  })();

  window.GyroscopeUpgrade = (function() {
    function GyroscopeUpgrade() {
      this.bindings();
    }

    GyroscopeUpgrade.prototype.bindings = function() {
      $(document).on('click', '.start-x-upgrade', (function(_this) {
        return function(e) {
          e.preventDefault();
          return _this.openUpgradeModal('x');
        };
      })(this));
      $(document).on('click', '.start-os-upgrade', (function(_this) {
        return function(e) {
          e.preventDefault();
          return _this.openUpgradeModal('os');
        };
      })(this));
      $(document).on('click', '.start-xray-upgrade', (function(_this) {
        return function(e) {
          e.preventDefault();
          return _this.openUpgradeModal('xray');
        };
      })(this));
      $(document).on('click', '.start-ai-upgrade', (function(_this) {
        return function(e) {
          e.preventDefault();
          return _this.openUpgradeModal('ai');
        };
      })(this));
      $(document).on('click', '.close-upgrade-modal', (function(_this) {
        return function(e) {
          e.preventDefault();
          return _this.closeModal();
        };
      })(this));
      $(document).on('click', '.plan-option', (function(_this) {
        return function(e) {
          e.preventDefault();
          return _this.selectPlan(e.currentTarget);
        };
      })(this));
      $(document).on('click', '.start-checkout', (function(_this) {
        return function(e) {
          var button;
          e.preventDefault();
          button = $(e.currentTarget);
          return _this.sendToCheckout(button);
        };
      })(this));
      $(document).on('click', '.switch-to-x-digital-now', (function(_this) {
        return function(e) {
          var button, confirmed;
          e.preventDefault();
          button = $(e.currentTarget);
          confirmed = window.confirm("Welcome to Gyroscope Coach. Your card will be charged 199 (USD) per month, each month until cancelled. Previous payments online will be prorated and may reduce your first payment.\n\nAre you ready to continue?");
          if (confirmed) {
            if (_this.clicking) {
              return;
            }
            _this.clicking = true;
            return _this.switchPlan('x199', 'x');
          }
        };
      })(this));
      $(document).on('click', '.switch-to-x-referral', (function(_this) {
        return function(e) {
          var button, confirmed;
          e.preventDefault();
          button = $(e.currentTarget);
          confirmed = window.confirm("Your discounted Coach membership will be $150 (USD) per month, renewing each month until cancelled. This gives you a $50 savings each month, PLUS an additional $50 off your first month!! Previous payments online will be prorated and may reduce your first payment.\n\nAre you ready to continue with discount?");
          if (confirmed) {
            if (_this.clicking) {
              return;
            }
            _this.clicking = true;
            return _this.switchPlan('x150', 'x', 'x_referral_50');
          }
        };
      })(this));
      $(document).on('click', '.switch-to-x-digital-quarterly-now', (function(_this) {
        return function(e) {
          var button, confirmed;
          e.preventDefault();
          button = $(e.currentTarget);
          confirmed = window.confirm("Your card will be charged $399(USD) for 3 months, renewing until cancelled. Previous payments for your membership will be prorated to automatically reduce your first payment.\n\nAre you ready to switch to the discounted membership?");
          if (confirmed) {
            if (_this.clicking) {
              return;
            }
            _this.clicking = true;
            return _this.switchPlan('x399', 'x');
          }
        };
      })(this));
      $(document).on('click', '.switch-to-x-digital-semiannual-now', (function(_this) {
        return function(e) {
          var button, confirmed;
          e.preventDefault();
          button = $(e.currentTarget);
          confirmed = window.confirm("Your card will be charged $798 (USD) for 6 months, renewing until cancelled. Previous payments for your membership will be prorated to automatically reduce your first payment.\n\nAre you ready to switch to the discounted membership?");
          if (confirmed) {
            if (_this.clicking) {
              return;
            }
            _this.clicking = true;
            return _this.switchPlan('x_semiannual_798', 'x');
          }
        };
      })(this));
      $(document).on('click', '.switch-to-ai-monthly-now', (function(_this) {
        return function(e) {
          var button, confirmed;
          e.preventDefault();
          button = $(e.currentTarget);
          confirmed = window.confirm("Gyroscope AI costs $29.99 (USD) per month, renewing until cancelled. Previous payments for your membership will be prorated to automatically reduce your first payment.\n\nDo you want to upgrade now?");
          if (confirmed) {
            if (_this.clicking) {
              return;
            }
            _this.clicking = true;
            return _this.switchPlan('ai_monthly', 'ai');
          }
        };
      })(this));
      $(document).on('click', '.switch-to-ai-quarterly-now', (function(_this) {
        return function(e) {
          var button, confirmed;
          e.preventDefault();
          button = $(e.currentTarget);
          confirmed = window.confirm("Your card will be charged $59.99 (USD) for 3 months, renewing until cancelled. Previous payments for your membership will be prorated to automatically reduce your first payment.\n\nAre you ready to upgrade?");
          if (confirmed) {
            if (_this.clicking) {
              return;
            }
            _this.clicking = true;
            return _this.switchPlan('ai_quarterly', 'ai');
          }
        };
      })(this));
      $(document).on('click', '.switch-to-ai-yearly-now', (function(_this) {
        return function(e) {
          var button, confirmed;
          e.preventDefault();
          button = $(e.currentTarget);
          confirmed = window.confirm("Gyroscope AI costs $119.88 (USD) per year, renewing until cancelled. The discount reduces the average price from $29.99 to only $9.99 per month!\n\nYour current card on file will be charged, and previous payments for your membership will be prorated to automatically reduce your first payment even further. Are you ready to upgrade?");
          if (confirmed) {
            if (_this.clicking) {
              return;
            }
            _this.clicking = true;
            return _this.switchPlan('ai_yearly', 'ai');
          }
        };
      })(this));
      $(document).on('click', '.switch-to-ai-semiannual-now', (function(_this) {
        return function(e) {
          var button, confirmed;
          e.preventDefault();
          button = $(e.currentTarget);
          confirmed = window.confirm("Gyroscope Score (AI) costs $69 (USD) for 6 months, renewing automatically. That’s less than $12 per month!\n\nYour current card on file will be charged, and previous payments for your membership will be prorated to automatically reduce your first payment even further. Are you ready to upgrade?");
          if (confirmed) {
            if (_this.clicking) {
              return;
            }
            _this.clicking = true;
            return _this.switchPlan('ai_semiannual', 'ai');
          }
        };
      })(this));
      $(document).on('click', '.switch-to-ai-semiannual-discount-now', (function(_this) {
        return function(e) {
          var button, confirmed;
          e.preventDefault();
          button = $(e.currentTarget);
          confirmed = window.confirm("Get Gyroscope Score with discount?\n\nYour first payment will be automatically prorated. Discounted rate will renew every 6 months automatically.\n\nAre you ready to start?");
          if (confirmed) {
            if (_this.clicking) {
              return;
            }
            _this.clicking = true;
            return _this.switchPlan('score_6mo_cheap', 'ai', 'blackfriday_score_29');
          }
        };
      })(this));
      $(document).on('click', '.switch-to-ai-xray-now', (function(_this) {
        return function(e) {
          var button, confirmed;
          e.preventDefault();
          button = $(e.currentTarget);
          confirmed = window.confirm("This will add the XRay and AI metabolic coaching features to your account! Your card will be charged $99/month, replacing your current subscription, renewing automatically.\n\nYour current card on file will be charged, and previous payments will be prorated to automatically reduce your first payment even further.\n\nAre you ready to upgrade now? Press OK to continue!");
          if (confirmed) {
            if (_this.clicking) {
              return;
            }
            _this.clicking = true;
            return _this.switchPlan('xray_99', 'xray');
          }
        };
      })(this));
      $(document).on('click', '.switch-to-xray-quarterly-now', (function(_this) {
        return function(e) {
          var button, confirmed;
          e.preventDefault();
          button = $(e.currentTarget);
          confirmed = window.confirm("This will add the XRay and AI metabolic coaching features to your account for only $66/month! Your card will be charged $198 for 3 months, replacing your current subscription, renewing automatically until cancelled.\n\nYour current card on file will be charged, and previous payments will be prorated to automatically reduce your first payment even further.\n\nAre you ready to start tracking your food? Press OK to continue!!");
          if (confirmed) {
            if (_this.clicking) {
              return;
            }
            _this.clicking = true;
            return _this.switchPlan('xray_quarter', 'xray');
          }
        };
      })(this));
      $(document).on('click', '.switch-to-xray-semiannual-now', (function(_this) {
        return function(e) {
          var button, confirmed;
          e.preventDefault();
          button = $(e.currentTarget);
          confirmed = window.confirm("This will add the XRay and AI metabolic coaching features to your account.\n\nYour current card on file will be charged, and previous payments will be prorated to automatically reduce your first payment even further.\n\nAre you ready to start tracking your food? Press OK to continue!!");
          if (confirmed) {
            if (_this.clicking) {
              return;
            }
            _this.clicking = true;
            return _this.switchPlan('xray_6months', 'xray');
          }
        };
      })(this));
      $(document).on('click', '.switch-to-ai-xray-792', (function(_this) {
        return function(e) {
          var button, confirmed;
          e.preventDefault();
          button = $(e.currentTarget);
          confirmed = window.confirm("This will add a year of XRAY & metabolic coaching to your account with exclusive annual discount, renewing automatically.\n\nAre you ready to start tracking your food? Press OK to continue!");
          if (confirmed) {
            if (_this.clicking) {
              return;
            }
            _this.clicking = true;
            return _this.switchPlan('xray_year_792', 'xray');
          }
        };
      })(this));
      $(document).on('click', '.switch-to-ai-xray-420', (function(_this) {
        return function(e) {
          var button, confirmed;
          e.preventDefault();
          button = $(e.currentTarget);
          confirmed = window.confirm("This will add the special holiday discounted rate! Are you ready to continue?");
          if (confirmed) {
            if (_this.clicking) {
              return;
            }
            _this.clicking = true;
            return _this.switchPlan('xray_6months', 'xray');
          }
        };
      })(this));
      return $(document).on('click', '.switch-promo-button', (function(_this) {
        return function(e) {
          var button, button_charge, button_coupon, button_original_charge, button_period, button_plan, button_tier, confirm_first, confirmed;
          e.preventDefault();
          button = $(e.currentTarget);
          button_plan = button.attr('data-plan');
          button_tier = button.attr('data-tier');
          button_charge = button.attr('data-charge');
          button_original_charge = button.attr('data-original-charge');
          button_period = button.attr('data-period');
          button_coupon = button.attr('data-coupon');
          confirm_first = button.attr('data-confirm');
          if (!button_plan) {
            alert('Something went wrong with the button, please contact support!');
            return;
          }
          if (!button_tier) {
            alert('Something went wrong with the upgrade tier, please contact support!');
            return;
          }
          if (!button_charge) {
            alert('Something went wrong with the charge, please contact support!');
            return;
          }
          confirmed = window.confirm("This discount will upgrade your account to the new membership, adding more features at a lower cost!\n\nYour card will be charged $" + button_charge + " to upgrade. Are you ready to start?");
          if (confirmed) {
            if (_this.clicking) {
              return;
            }
            _this.clicking = true;
            return _this.switchPlan(button_plan, button_tier, button_coupon);
          }
        };
      })(this));
    };

    GyroscopeUpgrade.prototype.switchPlan = function(plan, level, coupon) {
      $('body').addClass('paying');
      return $.ajax({
        url: '/billing/switch-plan/',
        method: 'post',
        data: {
          plan: plan,
          level: level,
          coupon: coupon
        }
      }).done((function(_this) {
        return function(data) {
          return _this.donePaying(data, plan);
        };
      })(this));
    };

    GyroscopeUpgrade.prototype.donePaying = function(data, plan) {
      if (plan === 'xray') {
        return window.location = '/xray/movie/';
      } else {
        return window.location = '/payment/success/';
      }
    };

    GyroscopeUpgrade.prototype.openUpgradeModal = function(tier) {
      var body, planButton, upgrade;
      if (!$('.upgrade-modal').hasClass('logged-in')) {
        gyroscope.register.openModal();
        return;
      }
      this.setupCheckoutButtons();
      upgrade = $('.globals .upgrade-modal');
      this.modalOpen = true;
      body = $('body').addClass('modal-open');
      if (tier === 'x') {
        body.addClass('upgrading-to-x').removeClass('upgrading-to-ai upgrading-to-os upgrading-to-xray');
        planButton = $('.x-plan .plan-option').first();
      } else if (tier === 'ai') {
        body.addClass('upgrading-to-ai').removeClass('upgrading-to-x  upgrading-to-os upgrading-to-xray');
        planButton = $('.ai-plan .plan-option').first();
      } else if (tier === 'os') {
        body.addClass('upgrading-to-os').removeClass('upgrading-to-ai upgrading-to-x upgrading-to-xray');
        planButton = $('.os-plan .plan-option').first();
      } else if (tier === 'xray') {
        body.addClass('upgrading-to-xray').removeClass('upgrading-to-ai upgrading-to-x upgrading-to-os');
        planButton = $('.xray-plan .plan-option').first();
      }
      upgrade.removeClass('collapsed');
      this.selectPlan(planButton);
      if (!this.stripe) {
        return this.setupStripe();
      }
    };

    GyroscopeUpgrade.prototype.closeModal = function() {
      var upgrade;
      upgrade = $('.globals .upgrade-modal');
      upgrade.addClass('collapsed');
      this.modalOpen = false;
      return $('body').removeClass('modal-open');
    };

    GyroscopeUpgrade.prototype.selectPlan = function(el) {
      var button, href, modal, selectedClass;
      if (!el) {
        return;
      }
      button = $(el);
      href = button.attr('href').replace('#', '');
      modal = button.parents('.upgrade-modal');
      selectedClass = 'selected';
      $('.plan-option', modal).removeClass(selectedClass);
      button.addClass(selectedClass);
      $('.continue', modal).removeClass(selectedClass);
      return $('.continue.with-' + href, modal).addClass(selectedClass);
    };

    GyroscopeUpgrade.prototype.sendToCheckout = function(button) {
      var email, session_id;
      email = button.attr('data-email');
      session_id = button.attr('data-session-id');
      if (!session_id) {
        alert('Invalid session for checkout, try reloading the page or contact support@gyrosco.pe if this continues');
        return;
      }
      if (!this.stripe) {
        this.setupStripe();
      }
      return this.stripe.redirectToCheckout({
        sessionId: session_id
      }).then((function(_this) {
        return function(result) {
          return console.log(result);
        };
      })(this));
    };

    GyroscopeUpgrade.prototype.setupStripe = function() {
      if (stripeKey) {
        return this.stripe = Stripe(stripeKey);
      } else {
        return console.log('Stripe details missing');
      }
    };

    GyroscopeUpgrade.prototype.setupCheckoutButtons = function() {
      if (!$('.upgrade-modal').hasClass('logged-in')) {
        return;
      }
      if (this.buttonsAlreadySetup) {
        return;
      }
      return $.ajax({
        method: 'get',
        url: '/checkouts/'
      }).done((function(_this) {
        return function(data) {
          if (!data) {
            return;
          }
          _this.buttonsAlreadySetup = true;
          if (data.os_monthly) {
            $('#checkout_os_monthly').attr('data-session-id', data.os_monthly).addClass('working');
          }
          if (data.os_yearly) {
            $('#checkout_os_yearly').attr('data-session-id', data.os_yearly).addClass('working');
          }
          if (data.x_monthly) {
            $('#checkout_x_monthly').attr('data-session-id', data.x_monthly).addClass('working');
          }
          if (data.x_quarterly) {
            $('#checkout_x_quarterly').attr('data-session-id', data.x_quarterly).addClass('working');
          }
          if (data.x_semiannual) {
            $('#checkout_x_semiannual').attr('data-session-id', data.x_semiannual).addClass('working');
          }
          if (data.xray_monthly) {
            $('#checkout_xray_monthly').attr('data-session-id', data.xray_monthly).addClass('working');
          }
          if (data.xray_quarterly) {
            $('#checkout_xray_quarterly').attr('data-session-id', data.xray_quarterly).addClass('working');
          }
          if (data.xray_semiannual) {
            $('#checkout_xray_semiannual').attr('data-session-id', data.xray_semiannual).addClass('working');
          }
          if (data.ai_monthly) {
            $('#checkout_ai_monthly').attr('data-session-id', data.ai_monthly).addClass('working');
          }
          if (data.ai_quarterly) {
            $('#checkout_ai_quarterly').attr('data-session-id', data.ai_quarterly).addClass('working');
          }
          if (data.ai_semiannual) {
            $('#checkout_ai_semiannual').attr('data-session-id', data.ai_semiannual).addClass('working');
          }
          if (data.ai_yearly) {
            $('#checkout_ai_yearly').attr('data-session-id', data.ai_yearly).addClass('working');
          }
          if (data.can_switch) {
            $('.upgrade-modal').addClass('switching');
            $('.upgrade-modal .switch-plan').addClass('working');
          }
          if (data.card_info) {
            return $('.card-info-text').text(data.card_info);
          }
        };
      })(this));
    };

    return GyroscopeUpgrade;

  })();

}).call(this);
